{"version":3,"file":"static/js/688.76f028fc.chunk.js","mappings":"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","sources":["assets/svgs/minus.svg","assets/svgs/add.svg","assets/svgs/barcode_scanner.svg","components/QRModal.js","components/Search.js","components/Modal.js","pages/Dashboard.js"],"sourcesContent":["var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMinus(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 2,\n    viewBox: \"0 0 11 2\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.833496 0.333328H10.1668V1.66666H0.833496V0.333328Z\",\n    fill: \"#0080F6\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMinus);\nexport default __webpack_public_path__ + \"static/media/minus.22896ec283327800e1c1b7c12b7a02b7.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAdd(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11,\n    height: 10,\n    viewBox: \"0 0 11 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.8335 4.33333V0.333328H6.16683V4.33333H10.1668V5.66666H6.16683V9.66666H4.8335V5.66666H0.833496V4.33333H4.8335Z\",\n    fill: \"#0080F6\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.0c89da448c93090467fd48b9f6d08caf.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBarcodeScanner(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_18_7749\",\n    style: {\n      maskType: \"alpha\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 0,\n    width: 20,\n    height: 20\n  }, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 20,\n    height: 20,\n    fill: \"#D9D9D9\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_18_7749)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.833496 17.5V13.3333H2.50016V15.8333H5.00016V17.5H0.833496ZM15.0002 17.5V15.8333H17.5002V13.3333H19.1668V17.5H15.0002ZM3.3335 15V5H5.00016V15H3.3335ZM5.8335 15V5H6.66683V15H5.8335ZM8.3335 15V5H10.0002V15H8.3335ZM10.8335 15V5H13.3335V15H10.8335ZM14.1668 15V5H15.0002V15H14.1668ZM15.8335 15V5H16.6668V15H15.8335ZM0.833496 6.66667V2.5H5.00016V4.16667H2.50016V6.66667H0.833496ZM17.5002 6.66667V4.16667H15.0002V2.5H19.1668V6.66667H17.5002Z\",\n    fill: \"#757575\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBarcodeScanner);\nexport default __webpack_public_path__ + \"static/media/barcode_scanner.50bcae2ffc3ccac44a75ff421f61d99d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Scanner } from \"@yudiel/react-qr-scanner\";\r\n\r\nconst QRModal = ({ closeModal, getQrCode }) => {\r\n  const [qrData, setQrData] = useState(\"\");\r\n  const [enviroment, setEnvironment] = useState(\"user\");\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const screenWidth = window.innerWidth;\r\n      if (screenWidth < 786) {\r\n        setEnvironment(\"environment\");\r\n      } else {\r\n        setEnvironment(\"user\");\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleScan = (data) => {\r\n    const [values] = data;\r\n    setQrData(values.rawValue);\r\n    handleSubmit(values.rawValue);\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    console.error(\"QR Scanner Error:\", error);\r\n  };\r\n\r\n  const handleSubmit = (data) => {\r\n    if (data) {\r\n      getQrCode(data);\r\n      // Add additional submit logic here\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      id=\"authentication-modal\"\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"false\"\r\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\r\n    >\r\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\r\n        {\" \"}\r\n        {/* Expanded width */}\r\n        <div className=\"relative bg-white rounded-lg shadow\">\r\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 \">\r\n              Scan your QR Code\r\n            </h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={closeModal}\r\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center \"\r\n            >\r\n              <svg\r\n                className=\"w-3 h-3\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 14 14\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                />\r\n              </svg>\r\n              <span className=\"sr-only\">Close modal</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"p-4 md:p-5 flex flex-col items-center gap-3\">\r\n            <div\r\n              id=\"scanner\"\r\n              style={{\r\n                height: \"250px\",\r\n                overflow: \"hidden\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <Scanner\r\n                onScan={(result) => {\r\n                  handleScan(result);\r\n                }}\r\n                onError={(error) => handleError(error)}\r\n                constraints={{\r\n                  video: {\r\n                    facingMode: enviroment,\r\n                  },\r\n                }}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default QRModal;\r\n","import React, { useState } from \"react\";\r\nimport barcode_scanner from \"../assets/svgs/barcode_scanner.svg\";\r\nimport search from \"../assets/imgs/search.png\";\r\nimport QRModal from \"./QRModal\";\r\nimport { ReactSVG } from \"react-svg\";\r\n\r\nconst Search = ({ searchData }) => {\r\n  const [searchBarCode, setSearchBarCode] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleSearchBarCode = (e) => {\r\n    setSearchBarCode(e.target.value);\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    searchData(query);\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const getQrCode = (data) => {\r\n    if (data) {\r\n      setSearchBarCode(data);\r\n      handleSearch(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-between items-center gap-2\">\r\n      <div className=\"relative lg:w-full md:w-full w-[90%]\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          className=\"w-full px-4 py-2 bg-tertiary-grey-40 rounded-lg outline-none font-poppins font-normal text-sm leading-5 text-tertiary-grey-700 placeholder:font-poppins placeholder:font-normal placeholder:text-tertiary-grey-700 placeholder:leading-5 placeholder:text-sm\"\r\n          placeholder=\"Search item availability\"\r\n          value={searchBarCode}\r\n          onChange={handleSearchBarCode}\r\n        />\r\n        <ReactSVG\r\n          src={barcode_scanner}\r\n          onClick={handleOpenModal}\r\n          className=\"absolute top-2.5 right-3 cursor-pointer\"\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"flex justify-center items-center bg-tertiary-grey-40 size-8 rounded-full\"\r\n        onClick={() => handleSearch(searchBarCode)}\r\n      >\r\n        <img src={search} alt=\"search\" className=\"size-3\" />\r\n      </div>\r\n      {isModalOpen && <QRModal closeModal={closeModal} getQrCode={getQrCode} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axiosInstance from \"../utils/axiosInstance\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst QRModal = ({ closeModal, data }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectLoading, setSelectLoading] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [selectMachCode, setSelectMachCode] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getAssetsList();\r\n  }, []);\r\n\r\n  async function getAssetsList() {\r\n    try {\r\n      setSelectLoading(true);\r\n      const response = await axiosInstance.get(\"api/Masters/Get_AssetsList\");\r\n      if (response.data.message === \"Success\") {\r\n        setList(response.data.data);\r\n        setSelectLoading(false);\r\n        toast.success(\"Gets machine list successfully\", {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      } else {\r\n        setSelectLoading(false);\r\n        toast.error(response.data.message, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setSelectLoading(false);\r\n      toast.error(error, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSelectMachineCode = (e) => {\r\n    setSelectMachCode(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      let body;\r\n      let response;\r\n\r\n      if (data?.value === \"goods\") {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n        const day = String(date.getDate()).padStart(2, \"0\");\r\n        const currentDate = `${year}${month}${day}`;\r\n        const min = 1;\r\n        const max = 9;\r\n        const randomIssueNo = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n        body = {\r\n          docNum: \"string\",\r\n          docDate: `${currentDate}`,\r\n          taxDate: `${currentDate}`,\r\n          remarks: \"string\",\r\n          receiptno: \"string\",\r\n          issueNo: `${randomIssueNo}`,\r\n          oGoodsIssueandReciptDetails: [\r\n            {\r\n              itemCode: data?.result?.itemCode,\r\n              itemDesc: \"string\",\r\n              whsCode: data?.result?.warehouseCode,\r\n              machine: selectMachCode,\r\n              quantity: data?.result?.quantityAvailable,\r\n              price: 0,\r\n              managedByBatch: \"N\",\r\n              binActivat: \"N\",\r\n              oBinlocations: [\r\n                {\r\n                  id: 0,\r\n                  whsCode: \"string\",\r\n                  binAbsEntry: \"string\",\r\n                  binCode: \"string\",\r\n                  quantity: \"string\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        };\r\n\r\n        response = await axiosInstance.post(\r\n          \"/api/Inventory/Post_GoodsIssue\",\r\n          body\r\n        );\r\n        if (response.data.message === \"Success\") {\r\n          setLoading(false);\r\n          navigate(\"/postdoc\");\r\n          toast.success(\"Post GoodsIssue submitted sucessfully\", {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(response.data.message, {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n      }\r\n      if (data?.value === \"receipt\") {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n        const day = String(date.getDate()).padStart(2, \"0\");\r\n        const currentDate = `${year}${month}${day}`;\r\n        const min = 1;\r\n        const max = 9;\r\n        const randomIssueNo = Math.floor(Math.random() * (max - min + 1)) + min;\r\n        body = {\r\n          docNum: \"string\",\r\n          docDate: `${currentDate}`,\r\n          taxDate: `${currentDate}`,\r\n          remarks: \"string\",\r\n          receiptno: `${randomIssueNo}`,\r\n          issueNo: \"string\",\r\n          oGoodsIssueandReciptDetails: [\r\n            {\r\n              itemCode: data?.result?.itemCode,\r\n              itemDesc: \"string\",\r\n              quantity: data?.result?.quantityAvailable,\r\n              whsCode: data?.result?.warehouseCode,\r\n              machine: selectMachCode,\r\n              managedByBatch: \"N\",\r\n              oBinlocations: [\r\n                {\r\n                  id: 0,\r\n                  whsCode: \"string\",\r\n                  binAbsEntry: \"string\",\r\n                  binCode: \"string\",\r\n                  quantity: \"string\",\r\n                },\r\n              ],\r\n              price: 0,\r\n              binActivat: \"N\",\r\n            },\r\n          ],\r\n        };\r\n        response = await axiosInstance.post(\r\n          \"/api/Inventory/Post_GoodsReceipt\",\r\n          body\r\n        );\r\n        if (response.data.message === \"Success\") {\r\n          setLoading(false);\r\n          navigate(\"/postdoc\");\r\n          toast.success(\"Post goods receipt submitted successfully\", {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(response.data.message, {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast.error(error, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      id=\"authentication-modal\"\r\n      tabIndex=\"-1\"\r\n      aria-hidden=\"false\"\r\n      className=\"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full bg-black bg-opacity-50\"\r\n    >\r\n      <div className=\"relative p-4 w-full max-w-lg max-h-full\">\r\n        {\" \"}\r\n        {/* Expanded width */}\r\n        <div className=\"relative bg-white rounded-lg shadow\">\r\n          <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 \">\r\n              Select Machine Code\r\n            </h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={closeModal}\r\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 inline-flex justify-center items-center \"\r\n            >\r\n              <svg\r\n                className=\"w-3 h-3\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 14 14\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\r\n                />\r\n              </svg>\r\n              <span className=\"sr-only\">Close modal</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"p-4 md:p-5 flex flex-col items-center gap-3\">\r\n            <div className=\"block w-full space-y-3\">\r\n              <div>\r\n                <label\r\n                  htmlFor=\"selectMachCode\"\r\n                  className=\"block mb-2 text-sm font-medium font-poppins text-black dark:text-white\"\r\n                >\r\n                  Select an option\r\n                </label>\r\n                <select\r\n                  id=\"selectMachCode\"\r\n                  name=\"selectMachCode\"\r\n                  value={selectMachCode}\r\n                  onChange={handleSelectMachineCode}\r\n                  className=\"bg-gray-50 border border-gray-300 text-black text-sm rounded-lg outline-none block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n                >\r\n                  <option value=\"\">Choose a machine code</option>\r\n                  {selectLoading ? (\r\n                    <option>Loading...</option>\r\n                  ) : (\r\n                    <>\r\n                      {list?.length === 0 ? (\r\n                        <option value=\"\">No machine codes available</option>\r\n                      ) : (\r\n                        <>\r\n                          {list?.map((result, id) => {\r\n                            return (\r\n                              <option key={id} value={result.assetCode}>\r\n                                {result.assetCode}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </select>\r\n              </div>\r\n              <button\r\n                onClick={handleSubmit}\r\n                className=\"w-full flex justify-center items-center py-1.5 px-1 text-white bg-primary rounded-lg\"\r\n              >\r\n                {loading ? (\r\n                  <div className=\"w-full bg-primary rounded-lg shadow-new  flex justify-center items-center\">\r\n                    <svg\r\n                      className=\"w-6 h-6 text-gray-300 animate-spin\"\r\n                      viewBox=\"0 0 64 64\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                    >\r\n                      <path\r\n                        d=\"M32 3C35.8083 3 39.5794 3.75011 43.0978 5.20749C46.6163 6.66488 49.8132 8.80101 52.5061 11.4939C55.199 14.1868 57.3351 17.3837 58.7925 20.9022C60.2499 24.4206 61 28.1917 61 32C61 35.8083 60.2499 39.5794 58.7925 43.0978C57.3351 46.6163 55.199 49.8132 52.5061 52.5061C49.8132 55.199 46.6163 57.3351 43.0978 58.7925C39.5794 60.2499 35.8083 61 32 61C28.1917 61 24.4206 60.2499 20.9022 58.7925C17.3837 57.3351 14.1868 55.199 11.4939 52.5061C8.801 49.8132 6.66487 46.6163 5.20749 43.0978C3.7501 39.5794 3 35.8083 3 32C3 28.1917 3.75011 24.4206 5.2075 20.9022C6.66489 17.3837 8.80101 14.1868 11.4939 11.4939C14.1868 8.80099 17.3838 6.66487 20.9022 5.20749C24.4206 3.7501 28.1917 3 32 3L32 3Z\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"5\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      ></path>\r\n                      <path\r\n                        d=\"M32 3C36.5778 3 41.0906 4.08374 45.1692 6.16256C49.2477 8.24138 52.7762 11.2562 55.466 14.9605C58.1558 18.6647 59.9304 22.9531 60.6448 27.4748C61.3591 31.9965 60.9928 36.6232 59.5759 40.9762\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"5\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        className=\"text-white\"\r\n                      ></path>\r\n                    </svg>\r\n                  </div>\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default QRModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport minus from \"../assets/svgs/minus.svg\";\r\nimport add from \"../assets/svgs/add.svg\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport Search from \"../components/Search\";\r\nimport axiosInstance from \"../utils/axiosInstance\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst Dashboard = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState({\r\n    result: null,\r\n    value: \"\",\r\n  });\r\n  const [openGoodsModal, setOpenGoodsModal] = useState(false);\r\n  const [openReceiptsModal, setOpenReceiptsModal] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const storedItems = localStorage.getItem(\"items\");\r\n    if (storedItems) {\r\n      setItems(JSON.parse(storedItems));\r\n    }\r\n  }, []);\r\n\r\n  const searchData = async (dataQuery) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axiosInstance.get(\r\n        `/api/Masters/GET_ItemAgainstBarCode?BarCode=${dataQuery}`\r\n      );\r\n      if (response.data.message === \"success\") {\r\n        const itemsWithQuantity = response.data.data.map((item) => ({\r\n          ...item,\r\n          maxAvailableStock: item.quantityAvailable,\r\n          id: Math.round(Math.random() * 100),\r\n        }));\r\n        setItems(itemsWithQuantity);\r\n        localStorage.setItem(\"items\", JSON.stringify(itemsWithQuantity));\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n        toast.error(response.data.message, {\r\n          position: \"bottom-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast.error(error, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleGoodsIssuesModal = async (data) => {\r\n    setData((prev) => ({\r\n      ...prev,\r\n      result: data,\r\n      value: \"goods\",\r\n    }));\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleGoodsReceiptModal = async (data) => {\r\n    setData((prev) => ({\r\n      ...prev,\r\n      result: data,\r\n      value: \"receipt\",\r\n    }));\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const updateQuantity = (id, increment) => {\r\n    setItems((prevItems) => {\r\n      const updatedItems = prevItems.map((item) => {\r\n        if (item.id === id) {\r\n          const newQuantity = item.quantityAvailable + increment;\r\n\r\n          // Ensure the quantity stays within bounds\r\n          if (newQuantity < 1 || newQuantity > item.maxAvailableStock) {\r\n            return item; // Return unchanged if out of bounds\r\n          }\r\n\r\n          return { ...item, quantityAvailable: newQuantity };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      localStorage.setItem(\"items\", JSON.stringify(updatedItems)); // Save updated items\r\n      return updatedItems;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\" bg-tertiary-grey-50  w-full flex justify-center items-center\">\r\n        <div className=\"lg:w-1/2 md:w-1/2 w-full lg:shadow-new md:shadow-new  lg:p-10 md:p-10 p-4  mb-6 lg:bg-white md:bg-white bg-tertiary-grey-50 lg:rounded-lg md:rounded-lg rounded-none\">\r\n          <div className=\"space-y-8\">\r\n            <Search searchData={searchData} />\r\n\r\n            {loading ? (\r\n              <div className=\"w-full bg-white rounded-lg shadow-new py-2 px-3 flex justify-center items-center\">\r\n                <svg\r\n                  className=\"w-8 h-8 text-gray-300 animate-spin\"\r\n                  viewBox=\"0 0 64 64\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                >\r\n                  <path\r\n                    d=\"M32 3C35.8083 3 39.5794 3.75011 43.0978 5.20749C46.6163 6.66488 49.8132 8.80101 52.5061 11.4939C55.199 14.1868 57.3351 17.3837 58.7925 20.9022C60.2499 24.4206 61 28.1917 61 32C61 35.8083 60.2499 39.5794 58.7925 43.0978C57.3351 46.6163 55.199 49.8132 52.5061 52.5061C49.8132 55.199 46.6163 57.3351 43.0978 58.7925C39.5794 60.2499 35.8083 61 32 61C28.1917 61 24.4206 60.2499 20.9022 58.7925C17.3837 57.3351 14.1868 55.199 11.4939 52.5061C8.801 49.8132 6.66487 46.6163 5.20749 43.0978C3.7501 39.5794 3 35.8083 3 32C3 28.1917 3.75011 24.4206 5.2075 20.9022C6.66489 17.3837 8.80101 14.1868 11.4939 11.4939C14.1868 8.80099 17.3838 6.66487 20.9022 5.20749C24.4206 3.7501 28.1917 3 32 3L32 3Z\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  ></path>\r\n                  <path\r\n                    d=\"M32 3C36.5778 3 41.0906 4.08374 45.1692 6.16256C49.2477 8.24138 52.7762 11.2562 55.466 14.9605C58.1558 18.6647 59.9304 22.9531 60.6448 27.4748C61.3591 31.9965 60.9928 36.6232 59.5759 40.9762\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    className=\"text-primary\"\r\n                  ></path>\r\n                </svg>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {items?.length === 0 ? (\r\n                  <></>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"bg-white rounded-lg shadow-new py-4 px-6 mb-4\">\r\n                      <h2 className=\"text-lg font-semibold text-primary\">\r\n                        {items[0]?.itemName}\r\n                      </h2>\r\n                      <p className=\"text-sm text-tertiary-grey-700\">\r\n                        Item Code: {items[0]?.itemCode}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"w-full overflow-x-auto bg-white rounded-lg shadow-new\">\r\n                      <table className=\"min-w-full\">\r\n                        <thead>\r\n                          <tr className=\"text-left\">\r\n                            <th className=\"p-3 text-sm text-gray-500 text-nowrap\">\r\n                              Warehouse Code\r\n                            </th>\r\n                            <th className=\"p-3 text-sm text-gray-500 text-nowrap\">\r\n                              Warehouse Name\r\n                            </th>\r\n                            <th className=\"p-3 text-sm text-gray-500\">\r\n                              Quantity\r\n                            </th>\r\n                            <th className=\"p-3 text-sm text-gray-500 text-nowrap\">\r\n                              Bin Location\r\n                            </th>\r\n                            <th className=\"p-3 text-sm text-gray-500\">\r\n                              Actions\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {items?.map((result, index) => {\r\n                            return (\r\n                              <tr\r\n                                key={result?.id}\r\n                                className=\"border-t border-gray-200\"\r\n                              >\r\n                                <td className=\"p-3\">\r\n                                  <p className=\"text-tertiary-grey-700 font-poppins font-normal text-xs leading-4\">\r\n                                    {result.warehouseCode}\r\n                                  </p>\r\n                                </td>\r\n                                <td className=\"p-3\">\r\n                                  <p className=\"text-tertiary-grey-700 font-poppins font-normal text-xs leading-4\">\r\n                                    {result.warehouseName}\r\n                                  </p>\r\n                                </td>\r\n                                <td className=\"p-3\">\r\n                                  <div className=\"flex items-center gap-2\">\r\n                                    <button\r\n                                      onClick={() =>\r\n                                        updateQuantity(result.id, -1)\r\n                                      }\r\n                                      className={`bg-tertiary-grey-40 flex justify-center items-center rounded-md px-2 py-3 \r\n                                        ${\r\n                                          result.quantityAvailable <= 1\r\n                                            ? \"bg-gray-200 text-gray-400 cursor-not-allowed\"\r\n                                            : \"bg-tertiary-grey-40 text-gray-700 hover:bg-tertiary-grey-60 cursor-pointer\"\r\n                                        }\r\n                                        `}\r\n                                      disabled={result.quantityAvailable <= 1}\r\n                                    >\r\n                                      <ReactSVG src={minus} />\r\n                                    </button>\r\n                                    <span className=\"text-tertiary-grey-700 font-poppins font-normal text-xs leading-4\">\r\n                                      {result.quantityAvailable}\r\n                                    </span>\r\n                                    <button\r\n                                      onClick={() =>\r\n                                        updateQuantity(result.id, 1)\r\n                                      }\r\n                                      className={`bg-tertiary-grey-40 flex justify-center items-center rounded-md px-2 py-2 cursor-pointer\r\n                                        ${\r\n                                          result.quantityAvailable >=\r\n                                          result.maxAvailableStock\r\n                                            ? \"bg-gray-200 text-gray-400 cursor-not-allowed\"\r\n                                            : \"bg-tertiary-grey-40 text-gray-700 hover:bg-tertiary-grey-60 cursor-pointer\"\r\n                                        }\r\n                                        `}\r\n                                      disabled={\r\n                                        result.quantityAvailable >=\r\n                                        result.maxAvailableStock\r\n                                      }\r\n                                    >\r\n                                      <ReactSVG src={add} />\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                                <td className=\"py-3 px-4\">\r\n                                  <p className=\"text-tertiary-grey-700 font-poppins font-normal text-xs leading-4\">\r\n                                    {result?.binLocation\r\n                                      ? result?.binLocation\r\n                                      : \"null\"}\r\n                                  </p>\r\n                                </td>\r\n                                <td className=\"py-3 px-4\">\r\n                                  <div className=\"space-y-2\">\r\n                                    <button\r\n                                      onClick={() =>\r\n                                        handleGoodsIssuesModal(result)\r\n                                      }\r\n                                      className=\"py-1 px-2 whitespace-nowrap font-poppins font-medium text-xs leading-5 text-white bg-primary rounded-lg w-full\"\r\n                                    >\r\n                                      Scan item to use\r\n                                    </button>\r\n                                    <button\r\n                                      onClick={() =>\r\n                                        handleGoodsReceiptModal(result)\r\n                                      }\r\n                                      className=\"py-1 px-2 whitespace-nowrap font-poppins font-medium text-xs leading-5 text-white bg-primary rounded-lg w-full\"\r\n                                    >\r\n                                      Scan item to Return\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {openModal && <Modal closeModal={closeModal} data={data} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","closeModal","getQrCode","qrData","setQrData","useState","enviroment","setEnvironment","useEffect","handleResize","screenWidth","window","innerWidth","addEventListener","removeEventListener","handleSubmit","data","ReactDOM","_jsx","id","tabIndex","className","children","_jsxs","type","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","style","height","overflow","position","Scanner","onScan","result","values","rawValue","handleScan","onError","error","console","handleError","constraints","video","facingMode","width","objectFit","document","body","searchData","searchBarCode","setSearchBarCode","isModalOpen","setIsModalOpen","handleSearch","query","name","placeholder","value","onChange","e","target","ReactSVG","src","barcode_scanner","handleOpenModal","search","alt","QRModal","loading","setLoading","selectLoading","setSelectLoading","list","setList","selectMachCode","setSelectMachCode","navigate","useNavigate","async","response","axiosInstance","get","message","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","getAssetsList","htmlFor","_Fragment","length","map","assetCode","preventDefault","_data$result","_data$result2","_data$result3","date","Date","year","getFullYear","month","String","getMonth","padStart","currentDate","getDate","min","max","docNum","docDate","taxDate","remarks","receiptno","issueNo","Math","floor","random","oGoodsIssueandReciptDetails","itemCode","itemDesc","whsCode","warehouseCode","machine","quantity","quantityAvailable","price","managedByBatch","binActivat","oBinlocations","binAbsEntry","binCode","post","_data$result4","_data$result5","_data$result6","Dashboard","_items$","_items$2","items","setItems","setData","openGoodsModal","setOpenGoodsModal","openReceiptsModal","setOpenReceiptsModal","openModal","setOpenModal","storedItems","localStorage","getItem","JSON","parse","updateQuantity","increment","prevItems","updatedItems","item","newQuantity","maxAvailableStock","setItem","stringify","Search","dataQuery","itemsWithQuantity","round","itemName","index","warehouseName","disabled","minus","add","binLocation","prev","handleGoodsIssuesModal","handleGoodsReceiptModal","Modal"],"sourceRoot":""}